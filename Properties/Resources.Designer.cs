//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Saga.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Saga.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream gameover {
            get {
                return ResourceManager.GetStream("gameover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream kamp {
            get {
                return ResourceManager.GetStream("kamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream laugh {
            get {
                return ResourceManager.GetStream("laugh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream levelup {
            get {
                return ResourceManager.GetStream("levelup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream mainmenu {
            get {
                return ResourceManager.GetStream("mainmenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Microsoft_Win32_Registry {
            get {
                object obj = ResourceManager.GetObject("Microsoft_Win32_Registry", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;doc&gt;
        ///  &lt;assembly&gt;
        ///    &lt;name&gt;Microsoft.Win32.Registry&lt;/name&gt;
        ///  &lt;/assembly&gt;
        ///  &lt;members&gt;
        ///    &lt;member name=&quot;T:Microsoft.Win32.Registry&quot;&gt;
        ///      &lt;summary&gt;Provides &lt;see cref=&quot;T:Microsoft.Win32.RegistryKey&quot; /&gt; objects that represent the root keys in the Windows registry, and &lt;see langword=&quot;static&quot; /&gt; methods to access key/value pairs.&lt;/summary&gt;
        ///    &lt;/member&gt;
        ///    &lt;member name=&quot;F:Microsoft.Win32.Registry.ClassesRoot&quot;&gt;
        ///      &lt;summary&gt;Defines the types (or classes) of d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Microsoft_Win32_Registry1 {
            get {
                return ResourceManager.GetString("Microsoft_Win32_Registry1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio {
            get {
                object obj = ResourceManager.GetObject("NAudio", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio_Asio {
            get {
                object obj = ResourceManager.GetObject("NAudio_Asio", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio.Asio&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:NAudio.Wave.Asio.Asio64Bit&quot;&gt;
        ///            &lt;summary&gt;
        ///            ASIO 64 bit value
        ///            Unfortunately the ASIO API was implemented it before compiler supported consistently 64 bit 
        ///            integer types. By using the structure the data layout on a little-endian system like the 
        ///            Intel x86 architecture will result in a &quot;non native&quot; storage of the 64  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio_Asio1 {
            get {
                return ResourceManager.GetString("NAudio_Asio1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio_Core {
            get {
                object obj = ResourceManager.GetObject("NAudio_Core", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio.Core&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:NAudio.Codecs.ALawDecoder&quot;&gt;
        ///            &lt;summary&gt;
        ///            a-law decoder
        ///            based on code from:
        ///            http://hazelware.luggle.com/tutorials/mulawcompression.html
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;F:NAudio.Codecs.ALawDecoder.ALawDecompressTable&quot;&gt;
        ///            &lt;summary&gt;
        ///            only 512 bytes required, so just use a l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio_Core1 {
            get {
                return ResourceManager.GetString("NAudio_Core1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio_Midi {
            get {
                object obj = ResourceManager.GetObject("NAudio_Midi", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio.Midi&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;M:NAudio.Utils.MergeSort.Sort``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})&quot;&gt;
        ///            &lt;summary&gt;
        ///            In-place and stable implementation of MergeSort
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;M:NAudio.Utils.MergeSort.Sort``1(System.Collections.Generic.IList{``0})&quot;&gt;
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio_Midi1 {
            get {
                return ResourceManager.GetString("NAudio_Midi1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio_Wasapi {
            get {
                object obj = ResourceManager.GetObject("NAudio_Wasapi", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio.Wasapi&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:NAudio.Wave.ComStream&quot;&gt;
        ///            &lt;summary&gt;
        ///            Implementation of Com IStream
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;T:NAudio.Wave.DmoEffectWaveProvider`2&quot;&gt;
        ///            &lt;summary&gt;
        ///            Provide WaveProvider that can apply effects in real time using DMO.
        ///            
        ///            If the audio thread is running on the STA threa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio_Wasapi1 {
            get {
                return ResourceManager.GetString("NAudio_Wasapi1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio_WinForms {
            get {
                object obj = ResourceManager.GetObject("NAudio_WinForms", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio.WinForms&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:NAudio.Gui.Fader&quot;&gt;
        ///            &lt;summary&gt;
        ///            Summary description for Fader.
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;F:NAudio.Gui.Fader.components&quot;&gt;
        ///            &lt;summary&gt;
        ///            Required designer variable.
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;M:NAudio.Gui.Fader.#ctor&quot;&gt;
        ///            &lt;summary&gt;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio_WinForms1 {
            get {
                return ResourceManager.GetString("NAudio_WinForms1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] NAudio_WinMM {
            get {
                object obj = ResourceManager.GetObject("NAudio_WinMM", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio.WinMM&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:NAudio.Wave.Compression.AcmDriver&quot;&gt;
        ///            &lt;summary&gt;
        ///            Represents an installed ACM Driver
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;M:NAudio.Wave.Compression.AcmDriver.IsCodecInstalled(System.String)&quot;&gt;
        ///            &lt;summary&gt;
        ///            Helper function to determine whether a particular codec is installed
        ///            &lt;/summary&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio_WinMM1 {
            get {
                return ResourceManager.GetString("NAudio_WinMM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;NAudio&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:NAudio.Wave.AudioFileReader&quot;&gt;
        ///            &lt;summary&gt;
        ///            AudioFileReader simplifies opening an audio file in NAudio
        ///            Simply pass in the filename, and it will attempt to open the
        ///            file and set up a conversion path that turns into PCM IEEE float.
        ///            ACM codecs will be used for conversion.
        ///            It provides a volume property and imp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio1 {
            get {
                return ResourceManager.GetString("NAudio1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Saga {
            get {
                object obj = ResourceManager.GetObject("Saga", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;configuration&gt;
        ///  &lt;startup&gt;
        ///    &lt;supportedRuntime version=&quot;v4.0&quot; sku=&quot;.NETFramework,Version=v4.7.2&quot; /&gt;
        ///  &lt;/startup&gt;
        ///  &lt;appSettings&gt;
        ///    &lt;add key=&quot;toggleReadLine&quot; value=&quot;false&quot; /&gt;
        ///    &lt;add key=&quot;toggleSlowPrint&quot; value=&quot;true&quot; /&gt;
        ///	&lt;add key=&quot;volume&quot; value=&quot;0,1&quot; /&gt;
        ///  &lt;/appSettings&gt;
        ///&lt;/configuration&gt;.
        /// </summary>
        internal static string Saga_exe {
            get {
                return ResourceManager.GetString("Saga_exe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Saga_exe1 {
            get {
                object obj = ResourceManager.GetObject("Saga_exe1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Saga1 {
            get {
                object obj = ResourceManager.GetObject("Saga1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream shop {
            get {
                return ResourceManager.GetStream("shop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] System_Configuration_ConfigurationManager {
            get {
                object obj = ResourceManager.GetObject("System_Configuration_ConfigurationManager", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;doc&gt;
        ///  &lt;assembly&gt;
        ///    &lt;name&gt;System.Configuration.ConfigurationManager&lt;/name&gt;
        ///  &lt;/assembly&gt;
        ///  &lt;members&gt;
        ///    &lt;member name=&quot;T:System.Configuration.ApplicationScopedSettingAttribute&quot;&gt;
        ///      &lt;summary&gt;Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.&lt;/summary&gt;
        ///    &lt;/member&gt;
        ///    &lt;member name=&quot;M:System.Configuration.ApplicationScopedSettingAttribute.#ctor&quot;&gt;
        ///      &lt;summary&gt;Initializes a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string System_Configuration_ConfigurationManager1 {
            get {
                return ResourceManager.GetString("System_Configuration_ConfigurationManager1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] System_Security_AccessControl {
            get {
                object obj = ResourceManager.GetObject("System_Security_AccessControl", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;doc&gt;
        ///  &lt;assembly&gt;
        ///    &lt;name&gt;System.Security.AccessControl&lt;/name&gt;
        ///  &lt;/assembly&gt;
        ///  &lt;members&gt;
        ///    &lt;member name=&quot;T:System.Security.AccessControl.AccessControlActions&quot;&gt;
        ///      &lt;summary&gt;Specifies the actions that are permitted for securable objects.&lt;/summary&gt;
        ///    &lt;/member&gt;
        ///    &lt;member name=&quot;F:System.Security.AccessControl.AccessControlActions.Change&quot;&gt;
        ///      &lt;summary&gt;Specifies write-only access.&lt;/summary&gt;
        ///    &lt;/member&gt;
        ///    &lt;member name=&quot;F:System.Security.AccessCon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string System_Security_AccessControl1 {
            get {
                return ResourceManager.GetString("System_Security_AccessControl1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] System_Security_Principal_Windows {
            get {
                object obj = ResourceManager.GetObject("System_Security_Principal_Windows", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;doc&gt;
        ///  &lt;assembly&gt;
        ///    &lt;name&gt;System.Security.Principal.Windows&lt;/name&gt;
        ///  &lt;/assembly&gt;
        ///  &lt;members&gt;
        ///    &lt;member name=&quot;T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle&quot;&gt;
        ///      &lt;summary&gt;Provides a safe handle to a Windows thread or process access token. For more information, see Access Tokens.&lt;/summary&gt;
        ///    &lt;/member&gt;
        ///    &lt;member name=&quot;M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)&quot;&gt;
        ///      &lt;summary&gt;Initializes a new instance of the &lt;see  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string System_Security_Principal_Windows1 {
            get {
                return ResourceManager.GetString("System_Security_Principal_Windows1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream taunt {
            get {
                return ResourceManager.GetStream("taunt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream troldmandskamp {
            get {
                return ResourceManager.GetStream("troldmandskamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream typewriter {
            get {
                return ResourceManager.GetStream("typewriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream win {
            get {
                return ResourceManager.GetStream("win", resourceCulture);
            }
        }
    }
}
